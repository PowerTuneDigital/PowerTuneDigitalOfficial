# GitHub Action that enables a repo to achieve gradual compliance with cpplint by
#     linting only those files that have been added or modified (vs. origin/master).
# 1. runs cpplint only on those files that have been modified vs. origin/master.
# 2. compiles with g++ only those files that have been modified vs. origin/master.
# 3. other optional filepath verifications may be commented out at the end of this file.
# From: https://github.com/cpplint/GitHub-Action-for-cpplint

name: cpplint_modified_files
on: [pull_request]
jobs:
  cpplint_modified_files:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - shell: python  # Show the version of shell: python and then upgrade shell: python to Python 3.8
        run: import sys ; print("Python {}.{}.{}".format(*sys.version_info))  # Legacy Python :-(
      - run: python -m pip install cpplint
      - run: git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY
      - run: git remote update
      - run: git branch -r
      - run: git branch -a
      - run: git diff $CI_REF_SLUG origin/main --name-only > git_diff.txt
      - name: cpplint_modified_files
        run: python .github/workflows/lint.py
      - run: npm install fs
      - uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const fs = require('fs')
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: fs.readFileSync('cpplint.txt', 'utf8')
            })        
        